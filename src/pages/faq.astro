---
import BaseLayout from "..//layouts/BaseLayout.astro";
import CTA from "../components/CTA.astro";
import Landing from "../components/Landing.astro";
import FAQ from "../data/faq.json";

// Optimize our landing image and pass it as props to the BaseLayout (for preloading) and Landing (for rendering)
import {getOptimizedImage} from "../js/utils"
import landingImage from "../assets/images/about-banner.avif" // <-- THE PATH TO THE ASSET YOU WANT TO PRELOAD - The asset must live in src
const optimizedImage = await getOptimizedImage(landingImage)
---

<BaseLayout
	title="About"
	description="Meta description for the page"
	preloadedImage = {optimizedImage}
>

	<Landing 
		title="About Us"
		image={optimizedImage}
	/>

	<section id="faq">
		<div class="cs-container">
			<div class="cs-content">
				<span class="cs-topper">FAQ</span>
				<h2 class="cs-title">If Your Question Is Not Here <span class="cs-color">Contact Us</span></h2>
				<p class="cs-text">
					At Digita, we value our relationship with each of our clients. If you have any questions that aren't addressed here, please don't hesitate to reach out. Send us an email, and our team will respond promptly to assist you.
				</p>
				<a href="/contact" class="cs-button-solid">Contact Us</a>
			</div>
			<ul class="cs-faq-group">
				{
					FAQ.map((faq) => (
						<li class="cs-faq-item">
							<button class="cs-button">
								<span class="cs-button-text">
									{faq.title}
								</span>
							</button>
							<p class="cs-item-p">
									{faq.answer}
							</p>
						</li>
					))
				}	
			</ul>
		</div>
	</section>
	<CTA />
</BaseLayout>

<script>

const faqItems = Array.from(document.querySelectorAll('.cs-faq-item'));
for (const item of faqItems) {
	const onClick = () => {
		item.classList.toggle('active')
	}
	item.addEventListener('click', onClick)
}
</script>

<style>
/*-- -------------------------- -->
<---            FAQ             -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
	#faq {
		padding: var(--sectionPadding);
		background: #fafbfc;
	}
	#faq .cs-container {
		width: 100%;
		/* changes to 1280px at tablet */
		max-width: 34.375rem;
		margin: auto;
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: flex-start;
		/* 40px - 48px */
		gap: clamp(2.5rem, 5vw, 3rem);
	}
	#faq .cs-content {
		/* set text align to left if content needs to be left aligned */
		text-align: left;
		width: 100%;
		display: flex;
		flex-direction: column;
		/* centers content horizontally, set to flex-start to left align */
		align-items: flex-start;
	}

	#faq .cs-color {
		color: var(--primary);
	}

	#faq .cs-title {
		/* 17 characters wide including spaces */
		max-width: 17ch;
	}
	#faq .cs-text {
		/* 32px - 48px */
		margin-bottom: clamp(2rem, 3vw, 3rem);
	}
	#faq .cs-button-solid {
		font-size: 1rem;
		/* 46px - 56px */
		line-height: clamp(2.875rem, 5.5vw, 3.5rem);
		text-decoration: none;
		font-weight: 700;
		text-align: center;
		margin: 0;
		color: #000;
		min-width: 9.375rem;
		padding: 0 1.5rem;
		background-color: var(--primary);
		border-radius: 0.25rem;
		display: inline-block;
		position: relative;
		z-index: 1;
		/* prevents padding from adding to the width */
		box-sizing: border-box;
	}
	#faq .cs-button-solid:before {
		content: "";
		position: absolute;
		height: 100%;
		width: 0%;
		background: #000;
		opacity: 1;
		top: 0;
		left: 0;
		z-index: -1;
		border-radius: 0.25rem;
		transition: width 0.3s;
	}
	.cs-button-solid:hover {
		color: #fff!important;
	}
	#faq .cs-button-solid:hover:before {
		width: 100%;
	}
	#faq .cs-faq-group {
		max-width: 46.25rem;
		padding: 0;
		margin: 0;
		display: flex;
		justify-content: center;
		align-items: center;
		flex-direction: column;
		gap: 1.25rem;
	}
	#faq .cs-faq-item {
		list-style: none;
		width: 100%;
		/* prevents border from affecting width and height */
		box-sizing: border-box;
		border: 1px solid #f1f1f4;
		transition:
			border 0.3s,
			padding 0.3s,
			border-color 0.3s;
	}
	#faq .cs-faq-item:hover {
		border-color: var(--primary);
	}
	#faq .cs-faq-item.active {
		padding-bottom: 1rem;
		border-color: var(--primary);
	}
	#faq .cs-faq-item.active .cs-button {
		color: var(--primary);
	}
	#faq .cs-faq-item.active .cs-button:before {
		transform: translateY(-50%) rotate(180deg);
		opacity: 0;
		background-color: var(--primary);
	}
	#faq .cs-faq-item.active .cs-button:after {
		transform: translateY(-50%) rotate(360deg);
		background-color: var(--primary);
	}
	#faq .cs-faq-item.active .cs-item-p {
		height: auto;
		margin-top: 0.5rem;
		opacity: 1;
	}
	#faq .cs-button {
		/* 20px - 25px */
		font-size: clamp(1.25rem, 1vw, 1.5625rem);
		line-height: 1.2em;
		text-align: left;
		font-weight: bold;
		padding: 1rem 1.5rem;
		border: none;
		background: transparent;
		color: var(--headerColor);
		display: block;
		width: 100%;
		position: relative;
		transition:
			background-color 0.3s,
			color 0.3s;
	}
	#faq .cs-button:hover {
		cursor: pointer;
	}
	#faq .cs-button:before {
		/* horizontal line */
		content: "";
		width: 1rem;
		height: 0.1875rem;
		background-color: currentColor;
		opacity: 1;
		border-radius: 1px;
		position: absolute;
		display: block;
		top: 50%;
		right: 1.5rem;
		transform: translateY(-50%);
		transition:
			transform 0.5s,
			opacity 0.3s;
	}
	#faq .cs-button:after {
		/* vertical line */
		content: "";
		width: 1rem;
		height: 0.1875rem;
		background-color: currentColor;
		opacity: 1;
		border-radius: 1px;
		position: absolute;
		display: block;
		top: 50%;
		right: 1.5rem;
		transform: translateY(-50%) rotate(90deg);
		transform-origin: center;
		transition: transform 0.5s;
	}
	#faq .cs-button-text {
		width: 80%;
		display: block;
	}
	#faq .cs-item-p {
		/* 14px - 16px */
		font-size: clamp(0.875rem, 1.5vw, 1rem);
		line-height: 1.5em;
		width: 90%;
		height: 0;
		margin: 0;
		/* prevents padding and border from affecting height and width */
		box-sizing: border-box;
		padding: 0 1.5rem;
		opacity: 0;
		color: var(--bodyTextColor);
		/* clips the text so it doesn't show up */
		overflow: hidden;
		transition:
			opacity 0.3s,
			padding-bottom 0.3s;
	}
}
/* Desktop - 1024px */
@media only screen and (min-width: 48rem) {
	#faq .cs-container {
		max-width: 80rem;
		flex-direction: row;
		justify-content: space-between;
		align-items: flex-start;
		gap: 3.25rem;
	}
	#faq .cs-content {
		margin-top: 3.125rem;
	}
	#faq .cs-title,
	#faq .cs-topper {
		text-align: left;
		margin-left: 0;
	}
	#faq .cs-faq-group {
		width: clamp(56%, 58vw, 58%);
		flex: none;
	}
}
/* Dark Mode */
@media only screen and (min-width: 0rem) {
	body.dark-mode #faq {
		background-color: var(--dark);
	}
	body.dark-mode #faq .cs-topper {
		color: var(--primaryLight);
	}
	body.dark-mode #faq .cs-title,
	body.dark-mode #faq .cs-text,
	body.dark-mode #faq .cs-item-p {
		color: var(--bodyTextColorWhite);
	}
	body.dark-mode #faq .cs-text,
	body.dark-mode #faq .cs-item-p {
		opacity: 0.8;
	}
	body.dark-mode #faq .cs-faq-item {
		border-color: rgba(255, 255, 255, 0.2);
	}
	body.dark-mode #faq .cs-faq-item:hover {
		border-color: var(--primary);
	}
	body.dark-mode #faq .cs-faq-item.active {
		border-color: var(--primaryLight);
	}
	body.dark-mode #faq .cs-faq-item.active .cs-button {
		color: var(--primaryLight);
	}
	body.dark-mode #faq .cs-faq-item.active .cs-button:before,
	body.dark-mode #faq .cs-faq-item.active .cs-button:after {
		background-color: var(--primaryLight);
	}
	body.dark-mode #faq .cs-button {
		color: var(--bodyTextColorWhite);
	}
	body.dark-mode #faq .cs-button:before,
	body.dark-mode #faq .cs-button:after {
		background-color: var(--bodyTextColorWhite);
	}
}
</style>
